import cv2

# Load Haar cascade classifier for face detection
face_classifier = cv2.CascadeClassifier(
    cv2.data.haarcascades + "haarcascade_frontalface_default.xml"
)

# Open video file or camera stream ('a.mp4' or 0 for webcam)
video_capture = cv2.VideoCapture('a.mp4')

def detect_bounding_box(frame):
    gray_image = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    faces = face_classifier.detectMultiScale(
        gray_image,
        scaleFactor=1.1,
        minNeighbors=5,
        minSize=(40, 40)
    )
    for (x, y, w, h) in faces:
        # Draw rectangle around detected face (no extra +100 pixels to avoid going out of frame)
        cv2.rectangle(frame, (x, y), (x + w, y + h), (0, 0, 255), 4)
    return faces

while True:
    result, video_frame = video_capture.read()
    if not result:
        break

    faces = detect_bounding_box(video_frame)
   
    cv2.imshow("My Object Detection Project", video_frame)
   
    # Press 'q' to quit
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Release resources
video_capture.release()
cv2.destroyAllWindows()
